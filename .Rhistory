rm(list=ls(all=TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(forecast)
install.packages("forecast")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("lubridate")
install.packages("reshape2")
install.packages("feasts")
install.packages("fpp3")
rm(list=ls(all=TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list=ls(all=TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(forecast)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(feasts)
library(fpp3)
set.seed(1)
dados<-read.table(file="datasets/electricity.csv",header=TRUE,sep=";",dec=",")
dados<-read.table(file="/datasets/electricity.csv",header=TRUE,sep=";",dec=",")
dados<-read.table(file="/dataset/electricity.csv",header=TRUE,sep=";",dec=",")
dados<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
dados<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
dados
str(dados)
glimpse(dados)
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
dts
data
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
g<-autoplot(dts,xlab="Ano",ylab="Electricity Consumption (KWh)")+
theme_bw()
str(data)
glimpse(data)
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
dts
#Gráfico 1
x11()
g<-autoplot(dts,xlab="Ano",ylab="Electricity Consumption (KWh)")+
theme_bw()
g<-autoplot(dts,xlab="Year",ylab="Electricity Consumption (KWh)")+
theme_bw()
set.seed(1)
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
dts
#Gráfico 1
x11()
g<-autoplot(dts,xlab="Year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
g<-autoplot(dts,xlab="date",ylab="Electricity Consumption (KWh)")+
theme_bw()
#Gráfico 1
x11()
g<-autoplot(dts,xlab="date",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
#Gráfico 1
x11()
g<-autoplot(dts,xlab="year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
dts
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
dts
#Gráfico 1
x11()
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
dts
#Gráfico 1
x11()
g<-autoplot(dts, xlab="year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,1], start = c(2017,9),frequency =12)
dts
#Gráfico 1
x11()
g<-autoplot(dts, xlab="year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
set.seed(1)
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,5], start = c(2017,9),frequency =12)
dts
set.seed(1)
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,5], start = c(2017,9),frequency =12)
dts
#Gráfico 1
x11()
g<-autoplot(dts, xlab="year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
#Para fazer gráfico iterativo
library(plotly)
x11()
#Gráfico 1
x11()
g<-autoplot(dts, xlab="year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
#Para fazer gráfico iterativo
library(plotly)
x11()
ggplotly(g)
ggAcf(dados[, 1])
ggPacf(dados[, 1])
x11()
ggAcf(data[, 5])
ggPacf(data[, 5])
ggAcf(data[, 5])
ggPacf(data[, 5])
library(urca)
args(ur.df)   #Mostra os argumentos da função que computa o teste ADF
adf_test<-ur.df(y=dts,lags=5,type="trend",selectlags="AIC")
adf_test@testreg
#Estatística do teste
adf_test@cval
summary(adf_test)@teststat
#Análise dos resíduos da regressão
plot(adf_test)
args(ur.kpss)
kpss_test<-ur.kpss(dts,type="tau",lags="short")
summary(kpss_test)
library(urca)
library(trend)
library(randtests)
args(runs.test)
runs_test<-runs.test(dts)
runs_test
mankendall_test<-mk.test(dts)
mankendall_test
cs_test<-cox.stuart.test(dts)
cs_test
kw_test<-kruskal.test(dados$consumption ~ dados$year)
kw_test
#Definindo o conjunto de dados
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
kw_test<-kruskal.test(dados$consumption ~ dados$order)
data<-read.table(file="dataset/electricity.csv",header=TRUE,sep=";",dec=",")
data
str(data)
glimpse(data)
dts  <-ts(data[,5], start = c(2017,9),frequency =12)
dts
x11()
str(data)
glimpse(data)
dts  <-ts(data[,5], start = c(2017,9),frequency =12)
dts
x11()
dts  <-ts(data[,5], start = c(2017,9),frequency =12)
dts
x11()
g<-autoplot(dts, xlab="year",ylab="Electricity Consumption (KWh)")+
theme_bw()
g
x11()
ggAcf(data[, 5])
ggPacf(data[, 5])
args(ur.df)
adf_test<-ur.df(y=dts,lags=5,type="trend",selectlags="AIC")
adf_test@testreg
adf_test@cval
summary(adf_test)@teststat
args(ur.kpss)
kpss_test<-ur.kpss(dts,type="tau",lags="short")
summary(kpss_test)
args(runs.test)
runs_test<-runs.test(dts)
runs_test
mankendall_test<-mk.test(dts)
mankendall_test
cs_test<-cox.stuart.test(dts)
cs_test
kw_test<-kruskal.test(dados$consumption ~ dados$order)
kw_test
#Considerando um nível de significância de 5%, com p-valor=0.4759,
#Considerando um nível de significância de 5%, com p-valor=0.4759,
#NÃO rejeita H0 então a série NÃO apresenta sazonalidade.
#Considerando um nível de significância de 5%, com p-valor=0.4759,
#NÃO rejeita H0 então a série NÃO apresenta sazonalidade.
#Considerando um nível de significância de 5%, com p-valor=0.4759,
#NÃO rejeita H0 então a série NÃO apresenta sazonalidade.
#Considerando um nível de significância de 5%, com p-valor=0.4759,
#NÃO rejeita H0 então a série NÃO apresenta sazonalidade.
kw_test<-kruskal.test(dados$consumption ~ dados$order)
kw_test<-kruskal.test(dados$consumption ~ dados$consumption)
kw_test<-kruskal.test(dados$consumption ~ dados$year)
kw_test
kw_test<-kruskal.test(dados$consumption ~ dados$order)
kw_test<-kruskal.test(data$consumption ~ data$order)
kw_test
